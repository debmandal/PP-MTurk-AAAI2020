if(Cat == 'Sports')
j <- 1:6
else if(Cat == 'Politics &\n Economy')
j <- 7:12
else if(Cat == 'Entertainment')
j <- 13:18
nt <- countw[countw$treatment == treatment,]$count
v <- sum(covA[t,j,,])
return(sqrt(v/(36*36*nt)))
}
sefuncTreat <- function(x) #standard error for a fixed treatment
{
treatment <- x[1]
if(treatment == 'Scoring Rule')
t <- 1
else if(treatment == 'Peer Prediction')
t <- 2
else if(treatment == 'Scoring + PP (Rank)')
t <- 3
else if(treatment == 'Scoring + PP')
t <- 4
nt <- countw[countw$treatment == treatment,]$count
v <- sum(covA[t,,,])
return(sqrt(v/(108*108*nt)))
}
VarAcc <- Acc %>% group_by(treatment, taskID, Category) %>% summarise(y = mean(BrierScore) ) %>% ungroup()
VarAcc$se <- apply(VarAcc[,c('treatment','taskID')],1,sefuncTask)
VarAcc <- VarAcc %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
pd <- position_dodge(width = 0.3)
qb <-c(seq(1:18))
ggplot(VarAcc, aes(x=taskID, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5, position = pd) +
geom_point(size = 0.5, position = pd) + geom_line(size  = 0.4, position = pd) +
ylab('Accuracy (Brier Score)') + xlab('Question Id') + labs(color = 'Treatment') +
scale_x_continuous(breaks = qb, labels = qb ) + scale_color_brewer(palette = 'Set1') +
ggtitle('Average Accuracy over the Week') + facet_wrap(~Category, scales = 'free_x')
# Treatment X Category
VarAcc <- Acc %>% group_by(treatment, Category) %>% summarise(y = mean(BrierScore) ) %>% ungroup()
VarAcc$se <- apply(VarAcc[,c('treatment','Category')],1,sefuncCat)
VarAcc <- VarAcc %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
pd <- position_dodge(width = 0.3)
qb <-c(seq(1:18))
ggplot(VarAcc, aes(x=Category, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5, position = pd) +
geom_point(size = 0.5, position = pd) + geom_line(size  = 0.4, position = pd) +
ylab('Accuracy (Brier Score)') +  labs(color = 'Treatment') +
scale_color_brewer(palette = 'Set1') +
ggtitle('Average Accuracy over the Week (II)')
#Only treatment
VarAcc <- Acc %>% group_by(treatment) %>% summarise(y = mean(BrierScore) ) %>% ungroup()
VarAcc$se <- apply(VarAcc[,c('treatment')],1,sefuncTreat)
VarAcc <- VarAcc %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
ggplot(VarAcc, aes(x=treatment, y=y,color=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5) +
geom_point(size = 0.5) +
ylab('Accuracy (Brier Score)') +  xlab('') + labs(color = 'Treatment') + scale_color_brewer(palette = 'Set1') +
ggtitle('Average Accuracy')
#Updates for different combinationations of Treatment and Category of Questions
lbd <- function(x){return(max(0,mean(x) - 1.96*sd(x)/sqrt( length(x)) ))}
ubd <- function(x){return(mean(x) + 1.96*sd(x)/sqrt( length(x)))}
Updates <- Updates.oct
levels(Updates$Category) <- c("Sports", "Politics &\n Economy", "Entertainment")
Updates$Date <- factor(Updates$Date, levels = c("Oct 8","Oct 9","Oct 10","Oct 11","Oct 12","Oct 13") )
theme_set(theme_bw() + theme(plot.title = element_text(face = 'bold', size = 12, hjust = 0.5),
panel.grid.major = element_line(color = 'grey70', size = 0.2),
panel.grid.minor = element_blank()
) )
one_workers <- Updates %>% group_by(workerId) %>% summarise(val = sum(updates)) %>% filter(val > 0) %>% select(c('workerId'))
NUpdates <- Updates %>% filter(workerId %in% one_workers$workerId)
countw <- Acc %>% group_by(treatment) %>% summarise(count = length(unique(workerId)))
sefuncTask <- function(x) #standard error for a fixed taskID
{
treatment <- x[1]
taskID <- x[2]
if(treatment == 'Scoring Rule')
t <- 1
else if(treatment == 'Peer Prediction')
t <- 2
else if(treatment == 'Scoring + PP (Rank)')
t <- 3
else if(treatment == 'Scoring + PP')
t <- 4
j <- as.numeric(taskID)
nt <- countw[countw$treatment == treatment,]$count
v <- sum(covA[t,j,,])
return(sqrt(v/(25*nt)))
}
sefuncCat <- function(x) #standard error for a fixed category
{
treatment <- x[1]
Cat <- x[2]
if(treatment == 'Scoring Rule')
t <- 1
else if(treatment == 'Peer Prediction')
t <- 2
else if(treatment == 'Scoring + PP (Rank)')
t <- 3
else if(treatment == 'Scoring + PP')
t <- 4
if(Cat == 'Sports')
j <- 1:6
else if(Cat == 'Politics &\n Economy')
j <- 7:12
else if(Cat == 'Entertainment')
j <- 13:18
nt <- countw[countw$treatment == treatment,]$count
v <- sum(covA[t,j,,])
return(sqrt(v/(30*30*nt)))
}
sefuncTreat <- function(x) #standard error for a fixed taskID
{
treatment <- x[1]
if(treatment == 'Scoring Rule')
t <- 1
else if(treatment == 'Peer Prediction')
t <- 2
else if(treatment == 'Scoring + PP (Rank)')
t <- 3
else if(treatment == 'Scoring + PP')
t <- 4
nt <- countw[countw$treatment == treatment,]$count
v <- sum(covA[t,,,])
return(sqrt(v/(90*90*nt)))
}
# Treatment X Category X Date
VarUpdates <- NUpdates %>% group_by(treatment, Date, taskID, Category) %>% summarise(n = n(), y = mean(updates), var = var(updates)) %>% ungroup()
VarUpdates <- VarUpdates %>% mutate(n_var = n*var, n_y = n*y)
VarUpdates <- VarUpdates %>% group_by(treatment, Date, Category) %>% summarise(y = sum(n_y)/sum(n), se = sqrt(sum(n_var)) / sum(n) )
VarUpdates <- VarUpdates %>% ungroup() %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
ggplot(VarUpdates, aes(x=Date, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5) +
geom_point(size = 0.6) + geom_line(size = 0.4) +
facet_grid(Category~treatment) +
ggtitle('Daily Updates') +
ylab('Average Updates') + xlab('Day in Oct') + labs(color = 'Treatment') +
scale_x_discrete(labels = c("Oct 8" = 8, "Oct 9" = 9, "Oct 10" = 10, "Oct 11" = 11, "Oct 12" = 12, "Oct 13" = 13)) +
scale_color_brewer(palette = 'Set1')
#Treatment X Question
covA <- array(NA,c(4,18,5,5))
for(t in 1:4)
{
for(j in 1:18)
{
for(d1 in 1:5)
{
for(d2 in 1:5)
{
Date1 <- paste('Oct', d1 + 7)
Date2 <- paste('Oct', d2 + 7)
if(t == 1)
Treat <- 'Scoring Rule'
else if(t == 2)
Treat <- 'Peer Prediction'
else if(t == 3)
Treat <- 'Scoring + PP (Rank)'
else if(t == 4)
Treat <- 'Scoring + PP'
v1 <- NUpdates[NUpdates$Date == Date1 & NUpdates$treatment == Treat & NUpdates$taskID == j, ]$updates
v2 <- NUpdates[NUpdates$Date == Date2 & NUpdates$treatment == Treat & NUpdates$taskID == j, ]$updates
covA[t,j,d1,d2] <- cov(v1,v2)
}
}
}
}
countw <- NUpdates %>% group_by(treatment) %>% summarise(count = length(unique(workerId)))
VarUpdates <- NUpdates %>% group_by(treatment, taskID, Category) %>% summarise(y = mean(updates) ) %>% ungroup()
VarUpdates$se <- apply(VarUpdates[,c('treatment','taskID')],1,sefuncTask)
VarUpdates <- VarUpdates %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
pd <- position_dodge(width = 0.3)
qb <-c(seq(1:18))
ggplot(VarUpdates, aes(x=taskID, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5, position = pd) +
geom_point(size = 0.5, position = pd) + geom_line(size  = 0.4, position = pd) +
ylab('Average Updates') + xlab('Question Id') + labs(color = 'Treatment') +
scale_x_continuous(breaks = qb, labels = qb ) + scale_color_brewer(palette = 'Set1') +
ggtitle('Average Updates over the Week') + facet_wrap(~Category, scales = 'free_x')
# Treatment X Category
VarUpdates <- NUpdates %>% group_by(treatment, Category) %>% summarise(y = mean(updates) ) %>% ungroup()
VarUpdates$se <- apply(VarUpdates[,c('treatment','Category')],1,sefuncCat)
VarUpdates <- VarUpdates %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
pd <- position_dodge(width = 0.3)
qb <-c(seq(1:18))
ggplot(VarUpdates, aes(x=Category, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5, position = pd) +
geom_point(size = 0.5, position = pd) + geom_line(size  = 0.4, position = pd) +
ylab('Average Updates') +  labs(color = 'Treatment') +
scale_color_brewer(palette = 'Set1') +
ggtitle('Average Updates over the Week (II)')
#Only treatment
VarUpdates <- NUpdates %>% group_by(treatment) %>% summarise(y = mean(updates) ) %>% ungroup()
VarUpdates$se <- apply(VarUpdates[,c('treatment')],1,sefuncTreat)
VarUpdates <- VarUpdates %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
ggplot(VarUpdates, aes(x=treatment, y=y,color=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5) +
geom_point(size = 0.5) +
ylab('Average Updates') +  xlab('') + labs(color = 'Treatment') + scale_color_brewer(palette = 'Set1') +
ggtitle('Average Updates (over workers who made at least one update)')
Total_Updates <- Updates %>% group_by(workerId, taskID, Category, treatment) %>% summarise(total = sum(updates)) %>% ungroup()
lbd <- function(x){return(max(0,mean(x) - 1.96*sd(x)/sqrt( length(x)) ))}
ubd <- function(x){return(mean(x) + 1.96*sd(x)/sqrt( length(x)))}
levels(Total_Updates$Category) <- c("Sports", "Politics &\n Economy", "Entertainment")
# Treatment X Question
VarTU <- Total_Updates %>% group_by(treatment,taskID,Category) %>% summarise(y = mean(total), se = sd(total)/sqrt(n()), ymin = y - 1.96*se, ymax = y + 1.96*se) %>% ungroup()
pd <- position_dodge(width = 0.3)
qb <-c(seq(1:15))
ggplot(VarTU, aes(x=taskID, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), position = pd, size = 0.4, width = 0.5) +
geom_point(size = 0.6, position = pd) + geom_line(size = 0.4, position = pd) +
ylab('Average Total Updates') + xlab('Question Id') + labs(color = 'Treatment') +
scale_x_continuous(breaks = qb, labels = qb ) + scale_color_brewer(palette = 'Set1') +
ggtitle('Average Total Updates over the Week') + facet_wrap(~Category, scales = 'free_x')
# Treatment X Category
pd <- position_dodge(width = 0.3)
VarTU <- Total_Updates %>% group_by(treatment, taskID, Category) %>% summarise(n = n(), y = mean(total), var = var(total)) %>% ungroup()
VarTU <- VarTU %>% mutate(n_var = n*var, n_y = n*y)
VarTU <- VarTU %>% group_by(treatment, Category) %>% summarise(y = sum(n_y)/sum(n), se = sqrt(sum(n_var)) / sum(n) )
VarTU <- VarTU %>% ungroup() %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
ggplot(VarTU, aes(x=Category, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), position = pd, size = 0.4, width = 0.5) +
geom_point(size = 0.6, position = pd) + geom_line(size = 0.4, position = pd) +
ylab('Average Total Updates') +  labs(color = 'Treatment') + scale_color_brewer(palette = 'Set1') +
ggtitle('Average Total Updates over the Week (II)')
#Only Treatment
pd <- position_dodge(width = 0.3)
VarTU <- Total_Updates %>% group_by(treatment, taskID) %>% summarise(n = n(), y = mean(total), var = var(total)) %>% ungroup()
VarTU <- VarTU %>% mutate(n_var = n*var, n_y = n*y)
VarTU <- VarTU %>% group_by(treatment) %>% summarise(y = sum(n_y)/sum(n), se = sqrt(sum(n_var)) / sum(n) )
VarTU <- VarTU %>% ungroup() %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
ggplot(VarTU, aes(x=treatment, y=y, color=treatment )) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), position = pd, size = 0.4, width = 0.5) +
geom_point(size = 0.6, position = pd) +
ylab('Average Total Updates') +  xlab('Treatment') +  scale_color_brewer(palette = 'Set1') + labs(color = 'Treatment') +
ggtitle('Average Total Updates')
lbd <- function(x){return(max(0,mean(x) - 1.96*sd(x)/sqrt( length(x))))}
ubd <- function(x){return(min(1,mean(x) + 1.96*sd(x)/sqrt( length(x))))}
pd <- position_dodge(width = 0.3)
Updates %>% mutate(returns = ifelse(updates > 0, 1, 0)) %>% group_by(Date,treatment) %>%
ggplot(aes(Date,returns,color=treatment,group=treatment)) +
stat_summary(fun.y = mean, geom = 'point',position=pd,size=0.5) +
stat_summary(fun.y = mean, geom = 'line',position=pd,size=0.4) +
stat_summary(fun.y = mean, geom = 'errorbar', fun.ymin = lbd, fun.ymax = ubd,position=pd,width=0.5) +
ylab('Propensity to Return') + xlab('Treatment')  + labs(color = 'Treatment') +
ggtitle('Daily Propensity to Return') + scale_color_brewer(palette = 'Set1')
#average propensity to return
Returns <- Updates %>% mutate(returns = ifelse(updates > 0, 1, 0))
countw <- Acc %>% group_by(treatment) %>% summarise(count = length(unique(workerId)))
covA <- array(NA,c(4,5,5))
for(t in 1:4)
{
for(d1 in 1:5)
{
for(d2 in 1:5)
{
Date1 <- paste('Oct', d1 - 1 + 8)
Date2 <- paste('Oct', d2 - 1 + 8)
if(t == 1)
Treat <- 'Scoring Rule'
else if(t == 2)
Treat <- 'Peer Prediction'
else if(t == 3)
Treat <- 'Scoring + PP (Rank)'
else if(t == 4)
Treat <- 'Scoring + PP'
v1 <- Returns[Returns$Date == Date1 & Returns$treatment == Treat, ]$returns
v2 <- Returns[Returns$Date == Date2 & Returns$treatment == Treat, ]$returns
covA[t,d1,d2] <- cov(v1,v2)
}
}
}
sefuncTreat1 <- function(x) #standard error for a fixed taskID
{
treatment <- x[1]
if(treatment == 'Scoring Rule')
t <- 1
else if(treatment == 'Peer Prediction')
t <- 2
else if(treatment == 'Scoring + PP (Rank)')
t <- 3
else if(treatment == 'Scoring + PP')
t <- 4
nt <- countw[countw$treatment == treatment,]$count
v <- sum(covA[t,,])
return(sqrt(v/(25*18*nt)))
}
#Only treatment
VarRet <- Returns %>% group_by(treatment) %>% summarise(y = mean(returns) ) %>% ungroup()
VarRet$se <- apply(VarRet[,c('treatment')],1,sefuncTreat1)
VarRet <- VarRet %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
ggplot(VarRet, aes(x=treatment, y=y,color=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5) +
geom_point(size = 0.5) +
ylab('Propensity to Return') +  xlab('') + labs(color = 'Treatment') + scale_color_brewer(palette = 'Set1') +
ggtitle('Average Propensity to Return')
lbd <- function(x){return(max(0,mean(x) - 1.96*sd(x)/sqrt( length(x)) ))}
ubd <- function(x){return(mean(x) + 1.96*sd(x)/sqrt( length(x)))}
Change <- Change.oct
levels(Change$Category) <- c("Sports", "Politics &\n Economy", "Entertainment")
Change$Date <- factor(Change$Date, levels = c("Oct 8","Oct 9","Oct 10","Oct 11","Oct 12","Oct 13") )
theme_set(theme_bw() + theme(plot.title = element_text(face = 'bold', size = 12, hjust = 0.5),
panel.grid.major = element_line(color = 'grey70', size = 0.2),
panel.grid.minor = element_blank()
) )
# Treatment X Category X Date
VarChange <- Change %>% group_by(treatment, Date, taskID, Category) %>% summarise(n = n(), y = mean(avg_change), var = var(avg_change)) %>% ungroup()
VarChange <- VarChange %>% mutate(n_var = n*var, n_y = n*y)
VarChange <- VarChange %>% group_by(treatment, Date, Category) %>% summarise(y = sum(n_y)/sum(n), se = sqrt(sum(n_var)) / sum(n) )
VarChange <- VarChange %>% ungroup() %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
ggplot(VarChange, aes(x=Date, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5) +
geom_point(size = 0.6) + geom_line(size = 0.4) +
facet_grid(Category~treatment) +
ggtitle('Daily Change in Forecasts') +
ylab('Change in Forecasts') + xlab('Day in Oct') + labs(color = 'Treatment') +
scale_x_discrete(labels = c("Oct 8" = 8, "Oct 9" = 9, "Oct 10" = 10, "Oct 11" = 11, "Oct 12" = 12, "Oct 13" = 13)) +
scale_color_brewer(palette = 'Set1')
#Treatment X Question
covA <- array(NA,c(4,18,5,5))
for(t in 1:4)
{
for(j in 1:18)
{
for(d1 in 1:5)
{
for(d2 in 1:5)
{
Date1 <- paste('Oct', d1 + 7)
Date2 <- paste('Oct', d2 + 7)
if(t == 1)
Treat <- 'Scoring Rule'
else if(t == 2)
Treat <- 'Peer Prediction'
else if(t == 3)
Treat <- 'Scoring + PP (Rank)'
else if(t == 4)
Treat <- 'Scoring + PP'
v1 <- Change[Change$Date == Date1 & Change$treatment == Treat & Change$taskID == j, ]$avg_change
v2 <- Change[Change$Date == Date2 & Change$treatment == Treat & Change$taskID == j, ]$avg_change
covA[t,j,d1,d2] <- cov(v1,v2)
}
}
}
}
countw <- Updates %>% group_by(treatment) %>% summarise(count = length(unique(workerId)))
VarChange <- Change %>% group_by(treatment, taskID, Category) %>% summarise(y = mean(avg_change) ) %>% ungroup()
VarChange$se <- apply(VarChange[,c('treatment','taskID')],1,sefuncTask)
VarChange <- VarChange %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
pd <- position_dodge(width = 0.3)
qb <-c(seq(1:18))
ggplot(VarChange, aes(x=taskID, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5, position = pd) +
geom_point(size = 0.5, position = pd) + geom_line(size  = 0.4, position = pd) +
ylab('Average Change in Forecasts') + xlab('Question Id') + labs(color = 'Treatment') +
scale_x_continuous(breaks = qb, labels = qb ) + scale_color_brewer(palette = 'Set1') +
ggtitle('Average Change in Forecasts over the Week') + facet_wrap(~Category, scales = 'free_x')
# Treatment X Category
VarChange <- Change %>% group_by(treatment, Category) %>% summarise(y = mean(avg_change) ) %>% ungroup()
VarChange$se <- apply(VarChange[,c('treatment','Category')],1,sefuncCat)
VarChange <- VarChange %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
pd <- position_dodge(width = 0.3)
qb <-c(seq(1:18))
ggplot(VarChange, aes(x=Category, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5, position = pd) +
geom_point(size = 0.5, position = pd) + geom_line(size  = 0.4, position = pd) +
ylab('Average Change in Forecasts') +  labs(color = 'Treatment') +
scale_color_brewer(palette = 'Set1') +
ggtitle('Average Change in Forecasts over the Week (II)')
#Only treatment
VarChange <- Change %>% group_by(treatment) %>% summarise(y = mean(avg_change) ) %>% ungroup()
VarChange$se <- apply(VarChange[,c('treatment')],1,sefuncTreat)
VarChange <- VarChange %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
ggplot(VarChange, aes(x=treatment, y=y,color=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5) +
geom_point(size = 0.5) +
ylab('Average Change in Forecasts') +  xlab('') + labs(color = 'Treatment') + scale_color_brewer(palette = 'Set1') +
ggtitle('Average Change in Forecasts')
#Accuracy for different combinationations of Treatment and Category of Questions
lbd <- function(x){return(max(0,mean(x) - 1.96*sd(x)/sqrt( length(x))))}
ubd <- function(x){return(min(1,mean(x) + 1.96*sd(x)/sqrt( length(x))))}
PPScore <- PPScore.oct
levels(PPScore$Category) <- c("Sports", "Politics &\n Economy", "Entertainment")
PPScore$Date <- factor(PPScore$Date, levels = c("Oct 8","Oct 9","Oct 10","Oct 11","Oct 12","Oct 13") )
theme_set(theme_bw() + theme(plot.title = element_text(face = 'bold', size = 12, hjust = 0.5),
panel.grid.major = element_line(color = 'grey70', size = 0.2),
panel.grid.minor = element_blank()
) )
# Treatment X Category X Date
VarPPScore <- PPScore %>% group_by(treatment, Date, taskID, Category) %>% summarise(n = n(), y = mean(PPPayment), var = var(PPPayment)) %>% ungroup()
VarPPScore <- VarPPScore %>% mutate(n_var = n*var, n_y = n*y)
VarPPScore <- VarPPScore %>% group_by(treatment, Date, Category) %>% summarise(y = sum(n_y)/sum(n), se = sqrt(sum(n_var)) / sum(n) )
VarPPScore <- VarPPScore %>% ungroup() %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
ggplot(VarPPScore, aes(x=Date, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5) +
geom_point(size = 0.6) + geom_line(size = 0.4) +
facet_grid(Category~treatment) +
ggtitle('Daily Peer Prediction Score') +
ylab('Peer Prediction Score') + xlab('Day in Oct') + labs(color = 'Treatment') +
scale_x_discrete(labels = c("Oct 8" = 8, "Oct 9" = 9, "Oct 10" = 10, "Oct 11" = 11, "Oct 12" = 12, "Oct 13" = 13)) +
scale_color_brewer(palette = 'Set1')
#Treatment X Question
covA <- array(NA,c(4,18,6,6))
for(t in 1:4)
{
for(j in 1:18)
{
for(d1 in 1:6)
{
for(d2 in 1:6)
{
Date1 <- paste('Oct', d1 - 1 + 8)
Date2 <- paste('Oct', d2 - 1 + 8)
if(t == 1)
Treat <- 'Scoring Rule'
else if(t == 2)
Treat <- 'Peer Prediction'
else if(t == 3)
Treat <- 'Scoring + PP (Rank)'
else if(t == 4)
Treat <- 'Scoring + PP'
v1 <- PPScore[PPScore$Date == Date1 & PPScore$treatment == Treat & PPScore$taskID == j, ]$PPPayment
v2 <- PPScore[PPScore$Date == Date2 & PPScore$treatment == Treat & PPScore$taskID == j, ]$PPPayment
covA[t,j,d1,d2] <- cov(v1,v2)
}
}
}
}
countw <- Acc %>% group_by(treatment) %>% summarise(count = length(unique(workerId)))
sefuncTask <- function(x) #standard error for a fixed taskID
{
treatment <- x[1]
taskID <- x[2]
if(treatment == 'Scoring Rule')
t <- 1
else if(treatment == 'Peer Prediction')
t <- 2
else if(treatment == 'Scoring + PP (Rank)')
t <- 3
else if(treatment == 'Scoring + PP')
t <- 4
j <- as.numeric(taskID)
nt <- countw[countw$treatment == treatment,]$count
v <- sum(covA[t,j,,])
return(sqrt(v/(36*nt)))
}
sefuncCat <- function(x) #standard error for a fixed category
{
treatment <- x[1]
Cat <- x[2]
if(treatment == 'Scoring Rule')
t <- 1
else if(treatment == 'Peer Prediction')
t <- 2
else if(treatment == 'Scoring + PP (Rank)')
t <- 3
else if(treatment == 'Scoring + PP')
t <- 4
if(Cat == 'Sports')
j <- 1:6
else if(Cat == 'Politics &\n Economy')
j <- 7:12
else if(Cat == 'Entertainment')
j <- 13:18
nt <- countw[countw$treatment == treatment,]$count
v <- sum(covA[t,j,,])
return(sqrt(v/(36*36*nt)))
}
sefuncTreat <- function(x) #standard error for a fixed treatment
{
treatment <- x[1]
if(treatment == 'Scoring Rule')
t <- 1
else if(treatment == 'Peer Prediction')
t <- 2
else if(treatment == 'Scoring + PP (Rank)')
t <- 3
else if(treatment == 'Scoring + PP')
t <- 4
nt <- countw[countw$treatment == treatment,]$count
v <- sum(covA[t,,,])
return(sqrt(v/(108*108*nt)))
}
VarPPScore <- PPScore %>% group_by(treatment, taskID, Category) %>% summarise(y = mean(PPPayment) ) %>% ungroup()
VarPPScore$se <- apply(VarPPScore[,c('treatment','taskID')],1,sefuncTask)
VarPPScore <- VarPPScore %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
pd <- position_dodge(width = 0.3)
qb <-c(seq(1:18))
ggplot(VarPPScore, aes(x=taskID, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5, position = pd) +
geom_point(size = 0.5, position = pd) + geom_line(size  = 0.4, position = pd) +
ylab('Peer Prediction Score') + xlab('Question Id') + labs(color = 'Treatment') +
scale_x_continuous(breaks = qb, labels = qb ) + scale_color_brewer(palette = 'Set1') +
ggtitle('Average Peer Prediction Score over the Week') + facet_wrap(~Category, scales = 'free_x')
# Treatment X Category
VarPPScore <- PPScore %>% group_by(treatment, Category) %>% summarise(y = mean(PPPayment) ) %>% ungroup()
VarPPScore$se <- apply(VarPPScore[,c('treatment','Category')],1,sefuncCat)
VarPPScore <- VarPPScore %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
pd <- position_dodge(width = 0.3)
qb <-c(seq(1:18))
ggplot(VarPPScore, aes(x=Category, y=y, color=treatment, group=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5, position = pd) +
geom_point(size = 0.5, position = pd) + geom_line(size  = 0.4, position = pd) +
ylab('Peer Prediction Score') +  labs(color = 'Treatment') +
scale_color_brewer(palette = 'Set1') +
ggtitle('Average Peer Prediction Score over the Week (II)')
#Only treatment
VarPPScore <- PPScore %>% group_by(treatment) %>% summarise(y = mean(PPPayment) ) %>% ungroup()
VarPPScore$se <- apply(VarPPScore[,c('treatment')],1,sefuncTreat)
VarPPScore <- VarPPScore %>% mutate(ymin = y - 1.96*se, ymax = y + 1.96*se)
ggplot(VarPPScore, aes(x=treatment, y=y,color=treatment)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax), size = 0.4, width = 0.5) +
geom_point(size = 0.5) +
ylab('Peer Prediction Score') +  xlab('') + labs(color = 'Treatment') + scale_color_brewer(palette = 'Set1') +
ggtitle('Average Peer Prediction Score')
